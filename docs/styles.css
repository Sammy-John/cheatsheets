/* Base Reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  :root {
    /* ðŸ“Œ Category Background Colors */
    --bg-imports: #f9e79f;              /* Soft yellow */
    --bg-program-structure: #aed6f1;    /* Soft sky blue */
    --bg-control-flow: #f5b7b1;         /* Coral pink */
    --bg-data-types: #abebc6;           /* Mint green */
    --bg-methods: #fad7a0;              /* Peach/orange */
    --bg-advanced-methods: #d6dbF5;     /* Muted Periwinkle Blue */
    --bg-classes-objects: #fdebd0;       /* Light peachy beige */
    --bg-oop-concepts: #e8daef;       /* Soft lavender */
    --bg-collections: #d5f5e3;        /* Soft mint green */
    --bg-enums-structs: #fcf3cf;     /* Soft buttery yellow */
    --bg-exceptions: #fadbd8;         /* Soft blush pink */
    --bg-namespaces: #ffeaa7;
    --bg-constants: #fab1a0;
    --bg-nullables: #dff9fb;
    --bg-type-casting: #f6e58d;
    --bg-attributes: #f8c291;
    --bg-lambda: #c7ecee;
    --bg-patterns: #fdcb6e;
    --bg-tuples: #dff0d8;
    --bg-dynamic: #ffeaa7;
    --bg-preprocessor: #dfe6e9;
    --bg-indexers: #d6a2e8;
    --bg-events: #f3a683;
    --bg-memory: #55efc4;
    --bg-unsafe: #ff7675;
    --bg-async: #81ecec;
    --bg-linq: #ffeaa7;

    /* ðŸ’¥ High-Punch Title Colors */
    --title-imports: #ff2d95;             /* Electric pink */
    --title-program-structure: #FF6f00;   /* Warm Orange */
    --title-control-flow: #6c3483; /* Rich Purple */
    --title-data-types: #bf40bf;          /* Hot purple */
    --title-methods: #2979ff;             /* Vivid blue */
    --title-advanced-methods: #6a1b9a;    /*Bold Violet Purple*/
    --title-classes-objects: #c0392b;    /* Strong brick red */
    --title-oop-concepts: #8e44ad;    /* Deep purple (high contrast) */
    --title-collections: #512e5f;     /* Indigo Punch */
    --title-enums-structs: #ca6f1e;  /* Rich rust orange */
    --title-exceptions: #c0392b;      /* Strong error red */
    --title-namespaces: #d63031;
    --title-constants: #6c3483;
    --title-nullables: #130f40;
    --title-type-casting: #2d3436;
    --title-attributes: #e55039;
    --title-lambda: #0984e3;
    --title-patterns: #6c5ce7;
    --title-tuples: #27ae60;
    --title-dynamic: #fd79a8;
    --title-preprocessor: #2d3436;
    --title-indexers: #6a0572;
    --title-events: #2e86de;
    --title-memory: #00cec9;
    --title-unsafe: #b71540;
    --title-async: #006266;
    --title-linq: #6c5ce7;

    /* ðŸ–‹ Paragraph Text Colors */
    --text-dark: #222;                   /* Blackish for light backgrounds */
    --text-light: #ddd;                  /* Light grey/white for dark backgrounds */
  }
  

/* Imports Category */
.card[data-category="Imports"] {
  background-color: var(--bg-imports);
  color: var(--text-dark); /* Light bg â†’ dark text */
}

.card[data-category="Imports"] h3 {
  color: var(--title-imports);
}

/* Program Structure Category */
.card[data-category="Program Structure"] {
  background-color: var(--bg-program-structure);
  color: var(--text-dark); /* Light bg â†’ dark text */
}

.card[data-category="Program Structure"] h3 {
  color: var(--title-program-structure);
}

/* Control Flow Category */
.card[data-category="Control Flow"] {
  background-color: var(--bg-control-flow);
  color: var(--text-dark);
}

.card[data-category="Control Flow"] h3 {
  color: var(--title-control-flow);
}

/* Data Types Category */
.card[data-category="Data Types"] {
  background-color: var(--bg-data-types);
  color: var(--text-dark);
}

.card[data-category="Data Types"] h3 {
  color: var(--title-data-types);
}

/* Methods Category */
.card[data-category="Methods"] {
  background-color: var(--bg-methods);
  color: var(--text-dark);
}

.card[data-category="Methods"] h3 {
  color: var(--title-methods);
}

/*Advanced Methods Category*/
.card[data-category="Advanced Method Syntax"] {
  background-color: var(--bg-advanced-methods);
  color: var(--text-dark); /* Ensures readability for paragraphs */
}

.card[data-category="Advanced Method Syntax"] h3 {
  color: var(--title-advanced-methods);
}

/* Classes and Objects */
.card[data-category="Classes & Objects"] {
  background-color: var(--bg-classes-objects);
  color: var(--text-dark); /* dark text on light bg */
}

.card[data-category="Classes & Objects"] h3 {
  color: var(--title-classes-objects);
}

/*OOP Concepts */
.card[data-category="OOP Concepts"] {
  background-color: var(--bg-oop-concepts);
  color: var(--text-dark);
}

.card[data-category="OOP Concepts"] h3 {
  color: var(--title-oop-concepts);
}

/* Collections and Arrays*/
.card[data-category="Collections & Arrays"] {
  background-color: var(--bg-collections);
  color: var(--text-dark);
}

.card[data-category="Collections & Arrays"] h3 {
  color: var(--title-collections);
}

/* Enums and Structs */
.card[data-category="Enums & Structs"] {
  background-color: var(--bg-enums-structs);
  color: var(--text-dark);
}

.card[data-category="Enums & Structs"] h3 {
  color: var(--title-enums-structs);
}

/* Exception and Error Handling */
.card[data-category="Exceptions & Error Handling"] {
  background-color: var(--bg-exceptions);
  color: var(--text-dark);
}

.card[data-category="Exceptions & Error Handling"] h3 {
  color: var(--title-exceptions);
}

.card[data-category="Namespaces"] {
  background-color: var(--bg-namespaces);
  color: var(--text-dark);
}
.card[data-category="Namespaces"] h3 {
  color: var(--title-namespaces);
}

.card[data-category="Constants & Readonly"] {
  background-color: var(--bg-constants);
  color: var(--text-dark);
}
.card[data-category="Constants & Readonly"] h3 {
  color: var(--title-constants);
}

.card[data-category="Nullable Types"] {
  background-color: var(--bg-nullables);
  color: var(--text-dark);
}
.card[data-category="Nullable Types"] h3 {
  color: var(--title-nullables);
}

.card[data-category="Type Casting & Conversion"] {
  background-color: var(--bg-type-casting);
  color: var(--text-dark);
}
.card[data-category="Type Casting & Conversion"] h3 {
  color: var(--title-type-casting);
}

.card[data-category="Attributes"] {
  background-color: var(--bg-attributes);
  color: var(--text-dark);
}
.card[data-category="Attributes"] h3 {
  color: var(--title-attributes);
}

.card[data-category="Lambda Expressions"] {
  background-color: var(--bg-lambda);
  color: var(--text-dark);
}
.card[data-category="Lambda Expressions"] h3 {
  color: var(--title-lambda);
}

.card[data-category="Pattern Matching"] {
  background-color: var(--bg-patterns);
  color: var(--text-dark);
}
.card[data-category="Pattern Matching"] h3 {
  color: var(--title-patterns);
}

.card[data-category="Tuples & Deconstruction"] {
  background-color: var(--bg-tuples);
  color: var(--text-dark);
}
.card[data-category="Tuples & Deconstruction"] h3 {
  color: var(--title-tuples);
}

.card[data-category="Dynamic & ExpandoObject"] {
  background-color: var(--bg-dynamic);
  color: var(--text-dark);
}
.card[data-category="Dynamic & ExpandoObject"] h3 {
  color: var(--title-dynamic);
}

.card[data-category="Preprocessor Directives"] {
  background-color: var(--bg-preprocessor);
  color: var(--text-dark);
}
.card[data-category="Preprocessor Directives"] h3 {
  color: var(--title-preprocessor);
}

.card[data-category="Indexers & Properties"] {
  background-color: var(--bg-indexers);
  color: var(--text-dark);
}
.card[data-category="Indexers & Properties"] h3 {
  color: var(--title-indexers);
}

.card[data-category="Events & Delegates"] {
  background-color: var(--bg-events);
  color: var(--text-dark);
}
.card[data-category="Events & Delegates"] h3 {
  color: var(--title-events);
}

.card[data-category="Memory Management"] {
  background-color: var(--bg-memory);
  color: var(--text-dark);
}
.card[data-category="Memory Management"] h3 {
  color: var(--title-memory);
}

.card[data-category="Unsafe Code & Pointers"] {
  background-color: var(--bg-unsafe);
  color: var(--text-dark);
}
.card[data-category="Unsafe Code & Pointers"] h3 {
  color: var(--title-unsafe);
}

.card[data-category="Async & Await"] {
  background-color: var(--bg-async);
  color: var(--text-dark);
}
.card[data-category="Async & Await"] h3 {
  color: var(--title-async);
}

.card[data-category="LINQ Basics"] {
  background-color: var(--bg-linq);
  color: var(--text-dark);
}
.card[data-category="LINQ Basics"] h3 {
  color: var(--title-linq);
}


  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    display: flex;
    height: 100vh;
    overflow: hidden;
    background-color: #1e1e2f;
    color: #f0f0f0;
  }
  
  /* Sidebar */
  .sidebar {
    width: 280px;
    background-color: #282a36;
    padding: 1.25rem;
    border-right: 1px solid #444;
    overflow-y: auto;
  }
  
  .sidebar h2 {
    font-size: 1.1rem;
    margin-bottom: 1rem;
    color: #50fa7b;
  }
  
  .sidebar h3 {
    font-size: 1rem;
    margin: 1rem 0 0.5rem;
    color: #8be9fd;
  }
  
  details summary {
    cursor: pointer;
    font-weight: bold;
    font-size: 0.95rem;
    color: #f8f8f2;
    margin-bottom: 0.5rem;
  }
  
  .category-block {
    margin-bottom: 1rem;
  }
  
  .card-filters {
    display: flex;
    flex-direction: column;
    gap: 0.35rem;
    padding-left: 1rem;
  }
  
  .card-filters label {
    font-size: 0.9rem;
    color: #ddd;
    cursor: pointer;
  }
  
  input[type="checkbox"] {
    margin-right: 0.5rem;
    accent-color: #50fa7b;
  }

  /* Hide toggle button on desktop */
.toggle-sidebar {
  display: none;
}

/* Show toggle button on mobile only */
@media (max-width: 768px) {
  .toggle-sidebar {
    display: block;
  }
}

.card-container {
  flex: 1;
  padding: 1rem;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 1rem;
  overflow-y: auto;
  background: #1e1e2f;
}

.card {
  width: 270px;              /* âœ… Fixed size */
  height: 300px;             /* âœ… Fixed height */
  box-sizing: border-box;
  border-radius: 8px;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);
  transition: transform 0.2s;
  cursor: grab;
  overflow-y: auto;
}

.card:hover {
  transform: scale(1.02);
}

  
  .card h3 {
    margin-bottom: 0.5rem;
    font-size: 1.1rem;
  }
  
  .card p {
    font-size: 0.9rem;
    color: var(--text-dark);
    margin-bottom: 0.5rem;
  }
  
  /* ðŸ§± Code Block Styling */
  .card pre {
    background-color: #13131a;
    color: #b6fcd5;
    font-family: 'Fira Code', 'Courier New', Courier, monospace;
    font-size: 0.85rem;
    padding: 0.75rem;
    border-radius: 4px;
    overflow-x: auto;
    white-space: pre-wrap;
  }
  
  /* Mobile Sidebar Behavior */
@media (max-width: 768px) {
  .sidebar {
    position: fixed;
    top: 0;
    left: -100%; /* Hidden off-screen */
    height: 100vh;
    background-color: #282a36;
    z-index: 1000;
    transition: left 0.3s ease;
  }

  .sidebar.open {
    left: 0; /* Slide in from the left when open */
  }

  .toggle-sidebar {
    display: block;
    position: fixed;
    top: 1rem;
    left: 1rem;
    z-index: 1100;
    background: #50fa7b;
    color: #1e1e2f;
    padding: 0.5rem 1rem;
    border: none;
    border-radius: 6px;
    font-weight: bold;
    cursor: pointer;
  }

  @media (max-width: 768px) {
    .card-container {
      flex: 1;
      width: 100%;
      padding: 1rem;
      padding-top: 3rem;
      display: flex;
      flex-direction: column;        /* âœ… Stack vertically */
      align-items: center;           /* âœ… Center the single column */
      gap: 1rem;
      overflow-y: auto;
      min-height: 0;
    }
  
    .card {
      width: 90%;                   /* âœ… Fills most of mobile width */
      max-width: 300px;             /* âœ… Keeps sizing consistent */
      height: 300px;                /* âœ… Taller for mobile readability */
      box-sizing: border-box;
    }
  
    .card pre {
      flex-grow: 1;
      padding: 0;
      margin: 0;
      overflow: hidden;             /* âœ… Avoid scrollbars inside the code block */
    }
  }
  
  
}
